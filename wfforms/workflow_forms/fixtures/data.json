[{"model": "workflow_forms.workflow_template", "pk": 1, "fields": {"workflow_name": "hello", "workflow_yaml": "apiVersion: argoproj.io/v1alpha1\r\nkind: Workflow\r\nmetadata:\r\n  generateName: hello--1\r\nspec:\r\n  entrypoint: DAG-hello--1\r\n  templates:\r\n\r\n  - name: SCRIPTOBCINIT\r\n    script:\r\n      image: debian:9.4\r\n      env:\r\n      - name: OBC_WORK_PATH\r\n        value: \"/private/openbio/work\"\r\n      - name: OBC_TOOL_PATH\r\n        value: \"/private/openbio/tool\"\r\n      - name: OBC_DATA_PATH\r\n        value: \"/private/openbio/data\"\r\n      - name: OBC_WORKFLOW_NAME\r\n        value: \"hello\"\r\n      - name: OBC_WORKFLOW_EDIT\r\n        value: \"1\"\r\n      - name: OBC_NICE_ID\r\n        value: \"hello__1\"\r\n      command: [bash]\r\n      source: |3+\r\n         \r\n         \r\n         \r\n         \r\n         if [ -n \"${OBC_WORK_PATH}\" ] ; then\r\n             export OBC_REPORT_PATH=${OBC_WORK_PATH}/${OBC_NICE_ID}.html\r\n             export OBC_REPORT_DIR=${OBC_WORK_PATH}/${OBC_NICE_ID}\r\n             mkdir -p ${OBC_REPORT_DIR}\r\n             echo \"OBC: Report filename: ${OBC_REPORT_PATH}\"\r\n         \r\n         cat > ${OBC_REPORT_PATH} << OBCENDOFFILE\r\n         <!DOCTYPE html>\r\n         <html lang=\"en\">\r\n            <head>\r\n               <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n            </head>\r\n            <body>\r\n            <p>\r\n            OpenBio Server: <a href=\"${OBC_SERVER}\">${OBC_SERVER}</a> <br>\r\n            Workflow: <a href=\"${OBC_SERVER}/w/${OBC_WORKFLOW_NAME}/${OBC_WORKFLOW_EDIT}\">${OBC_WORKFLOW_NAME}/${OBC_WORKFLOW_EDIT}</a> <br>\r\n         \r\n            <p>\r\n            <h3>Intermediate Variables:</h3>\r\n            <ul>\r\n               <!-- {{INTERMEDIATE_VARIABLE}} -->\r\n            </ul>\r\n         \r\n            <p>\r\n            <h3>Output Variables:</h3>\r\n            <ul>\r\n               <!-- {{OUTPUT_VARIABLE}} -->\r\n            </ul>\r\n         \r\n            </body>\r\n         </html>\r\n         OBCENDOFFILE\r\n         fi\r\n         \r\n         \r\n         \r\n         cat > ${OBC_WORK_PATH}/obc_functions.sh << 'OBCENDOFFILE'\r\n         \r\n         \r\n         \r\n         export OBC_REPORT_PATH=${OBC_WORK_PATH}/${OBC_NICE_ID}.html\r\n         export OBC_REPORT_DIR=${OBC_WORK_PATH}/${OBC_NICE_ID}\r\n         \r\n         function REPORT() {\r\n             if [ -n \"${OBC_WORK_PATH}\" ] ; then\r\n                 local VAR=$1\r\n                 local TIMENOW=$(date)\r\n                 local WHOCALLEDME=$(caller 0 | awk '{print $2}')\r\n         \r\n                 if [ -z $3 ] ; then\r\n                     local TAG=INTERMEDIATE_VARIABLE\r\n                 else\r\n                     local TAG=$3\r\n                 fi\r\n         \r\n                 if [ ${TAG} == \"INTERMEDIATE_VARIABLE\" ] ; then\r\n                     local EXTRA=\"${TIMENOW}. Called from: ${WHOCALLEDME}\"\r\n                 else\r\n                     local EXTRA=\"\"\r\n                 fi\r\n         \r\n                 local FILEKIND=$(file \"${2}\")\r\n                 # echo \"OBC: FILE RESULT ${FILEKIND}\"\r\n                 if [[ $FILEKIND == *\"PNG image data\"* ]]; then\r\n                    local NEWFILENAME=${OBC_REPORT_DIR}/$(basename ${2})\r\n                    local LOCALFILENAME=${OBC_NICE_ID}/$(basename ${2})\r\n                    cp ${2} ${NEWFILENAME}\r\n                    local HTML=\"<li>${EXTRA} ${VAR}: <br><img src=\\\"${LOCALFILENAME}\\\"></li>\\\\\\\\n      <!-- {{${TAG}}} -->\\\\\\\\n\"\r\n                 elif [[ $FILEKIND == *\"PDF document\"* ]]; then\r\n                    local NEWFILENAME=${OBC_REPORT_DIR}/$(basename ${2})\r\n                    local LOCALFILENAME=${OBC_NICE_ID}/$(basename ${2})\r\n                    cp ${2} ${NEWFILENAME}\r\n                    local HTML=\"<li>${EXTRA} ${VAR}: <br><a href=\\\"${LOCALFILENAME}\\\">${LOCALFILENAME}</a></li>\\\\\\\\n      <!-- {{${TAG}}} -->\\\\\\\\n\"\r\n                 else\r\n                    local VALUE=$(echo \"${2}\" | sed 's/&/\\\\\\&amp;/g; s/</\\\\\\&lt;/g; s/>/\\\\\\&gt;/g; s/\"/\\\\\\&quot;/g; s/'\"'\"'/\\\\\\&#39;/g')\r\n                    local HTML=\"<li>${EXTRA} ${VAR}=${VALUE}</li>\\\\\\\\n      <!-- {{${TAG}}} -->\\\\\\\\n\"\r\n                 fi\r\n         \r\n                 sed -i -e \"s|<\\!-- {{${TAG}}} -->|${HTML}|\" ${OBC_REPORT_PATH}\r\n                 sed 's/\\\\n/\\\r\n         /g' ${OBC_REPORT_PATH} > ${OBC_REPORT_PATH}.tmp\r\n                 mv ${OBC_REPORT_PATH}.tmp ${OBC_REPORT_PATH}\r\n             fi\r\n         }\r\n         \r\n         \r\n         \r\n         OBCENDOFFILE\r\n         \r\n         touch ${OBC_WORK_PATH}/qEeMx_inputs.sh\r\n         \r\n\r\n\r\n\r\n  - name: step--main-step--hello--1--1\r\n    script:\r\n      image: debian:9.4\r\n      env:\r\n      - name: OBC_WORK_PATH\r\n        value: \"/private/openbio/work\"\r\n      - name: OBC_TOOL_PATH\r\n        value: \"/private/openbio/tool\"\r\n      - name: OBC_DATA_PATH\r\n        value: \"/private/openbio/data\"\r\n      - name: OBC_WORKFLOW_NAME\r\n        value: \"hello\"\r\n      - name: OBC_WORKFLOW_EDIT\r\n        value: \"1\"\r\n      - name: OBC_NICE_ID\r\n        value: \"hello__1\"\r\n      command: [bash]\r\n      source: |3+\r\n         . ${OBC_WORK_PATH}/qEeMx_inputs.sh\r\n         . ${OBC_WORK_PATH}/obc_functions.sh\r\n         OBC_START=$(eval \"declare\")\r\n         :\r\n         # Insert the BASH commands for this step.\r\n         # You can use the variable ${OBC_WORK_PATH} as your working directory.\r\n         # Also read the Documentation about the REPORT and the PARALLEL commands.\r\n         \r\n         echo ${GREETING}\r\n         OBC_CURRENT=$(eval \"declare\")\r\n         comm -3 <(echo \"$OBC_START\" | grep -v \"_=\" | sort) <(echo \"$OBC_CURRENT\" | grep -v OBC_START | grep -v PIPESTATUS | grep -v \"_=\" | sort) > ${OBC_WORK_PATH}/step__main_step__hello__1__1_VARS.sh\r\n         \r\n\r\n\r\n\r\n  - name: SCRIPTOBCFINAL\r\n    script:\r\n      image: debian:9.4\r\n      env:\r\n      - name: OBC_WORK_PATH\r\n        value: \"/private/openbio/work\"\r\n      - name: OBC_TOOL_PATH\r\n        value: \"/private/openbio/tool\"\r\n      - name: OBC_DATA_PATH\r\n        value: \"/private/openbio/data\"\r\n      - name: OBC_WORKFLOW_NAME\r\n        value: \"hello\"\r\n      - name: OBC_WORKFLOW_EDIT\r\n        value: \"1\"\r\n      - name: OBC_NICE_ID\r\n        value: \"hello__1\"\r\n      command: [bash]\r\n      source: |3+\r\n         . ${OBC_WORK_PATH}/step__main_step__hello__1__1_VARS.sh\r\n         . ${OBC_WORK_PATH}/obc_functions.sh\r\n         \r\n         \r\n         OBC_REPORT_TGZ=${OBC_WORK_PATH}/${OBC_NICE_ID}.tgz\r\n         \r\n         #echo \"RUNNING: \"\r\n         #echo \"tar zcf ${OBC_REPORT_TGZ} -C ${OBC_WORK_PATH} ${OBC_NICE_ID}.html ${OBC_NICE_ID}/\"\r\n         \r\n         tar zcf ${OBC_REPORT_TGZ} -C ${OBC_WORK_PATH} ${OBC_NICE_ID}.html ${OBC_NICE_ID}/\r\n         \r\n         echo \"{}\"\r\n         \r\n\r\n\r\n  - name: DAG-hello--1\r\n    dag:\r\n      tasks:\r\n\r\n      - name: TASKOBCINIT\r\n        dependencies: []\r\n        template: SCRIPTOBCINIT\r\n\r\n      - name: TASK-step--main-step--hello--1--1\r\n        dependencies: [TASKOBCINIT]\r\n        template: step--main-step--hello--1--1\r\n\r\n      - name: TASKOBCFINAL\r\n        dependencies: [TASK-step--main-step--hello--1--1]\r\n        template: SCRIPTOBCFINAL", "workflow_custform": "greeting,Greeting to output.,str,Hi!,none,GREETING", "pub_date": "2021-10-10T00:00:00Z"}}]
